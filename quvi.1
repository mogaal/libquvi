.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "quvi 1"
.TH quvi 1 "2010-04-26" "0.2.0" "quvi manual"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
quvi \- query video tool
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
quvi [options] [url...]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
quvi is a command line tool for parsing video download links.
It supports Youtube and other similar video websites.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print help and exit.
.IP "\fB\-v, \-\-version\fR" 4
.IX Item "-v, --version"
Print program version and exit.
.IP "\fB\-\-hosts\fR" 4
.IX Item "--hosts"
Print supported hosts and exit.
.IP "\fB\-q, \-\-quiet\fR" 4
.IX Item "-q, --quiet"
Turn off all output.
.IP "\fB\-\-debug\fR" 4
.IX Item "--debug"
Turn on libcurl verbose mode.
.IP "\fB\-n, \-\-no\-verify\fR" 4
.IX Item "-n, --no-verify"
Do not verify video link. Note that quvi will not report
video file length, content-type or file suffix if this
option is used.
.IP "\fB\-\-page\-title\fR=\fIstring\fR" 4
.IX Item "--page-title=string"
Match parsed video page title to \fIstring\fR.
.IP "\fB\-\-video\-id\fR=\fIstring\fR" 4
.IX Item "--video-id=string"
Match parsed video \s-1ID\s0 to \fIstring\fR.
.IP "\fB\-\-file\-length\fR=\fIlength\fR" 4
.IX Item "--file-length=length"
Match parsed video file length to \fIlength\fR.
.IP "\fB\-\-file\-suffix\fR=\fIstring\fR" 4
.IX Item "--file-suffix=string"
Match parsed video file suffix to \fIstring\fR.
.IP "\fB\-a, \-\-test\-all\fR" 4
.IX Item "-a, --test-all"
Run all built-in tests. quvi will test all
built-in video page links.
.IP "\fB\-t, \-\-test\fR=\fIpattern\fR" 4
.IX Item "-t, --test=pattern"
Match \fIpattern\fR to a built-in test page link
and test it.
.IP "\fB\-d, \-\-dump\fR" 4
.IX Item "-d, --dump"
Dump video details when running tests. To be used
with \fB\-\-test\-all\fR.
.IP "\fB\-\-agent\fR=\fIstring\fR" 4
.IX Item "--agent=string"
Identify quvi as \fIstring\fR to servers. Default
is \*(L"Mozilla/5.0\*(R".
.IP "\fB\-\-proxy\fR=\fIhost[:port]\fR" 4
.IX Item "--proxy=host[:port]"
Use the specified \s-1HTTP\s0 proxy. Note that quvi will
use http_proxy environment setting if it is set.
.IP "\fB\-\-connect\-timeout\fR=\fIseconds\fR" 4
.IX Item "--connect-timeout=seconds"
Maximum seconds allowed connection to server take.
Default is 30.
.IP "\fB\-f, \-\-format\fR[=]\fIformat_id\fR" 4
.IX Item "-f, --format[=]format_id"
Query video format, \fIformat_id\fR depends on the host,
see \fB\-\-hosts\fR output.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "quvi \s-1URL\s0" 4
.IX Item "quvi URL"
Test \s-1URL\s0.
.IP "quvi \-a" 4
.IX Item "quvi -a"
Run all built-in host tests.
.IP "quvi \-t youtube" 4
.IX Item "quvi -t youtube"
Match 'youtube' string to built-in video page links
and test it.
.IP "quvi \s-1URL\s0 \-f best" 4
.IX Item "quvi URL -f best"
Query 'best' of the video from the \s-1URL\s0.
.SH "BUGS"
.IX Header "BUGS"
Sure to be some. Please report them.
.PP
.Vb 1
\&  <http://quvi.googlecode.com/>
.Ve
.SH "DEBUGGING"
.IX Header "DEBUGGING"
.IP "quvi \-\-debug \s-1URL\s0" 4
.IX Item "quvi --debug URL"
Spew out libcurl verbose mode messages.
.ie n .IP "$prefix/share/quvi/lua/README" 4
.el .IP "\f(CW$prefix\fR/share/quvi/lua/README" 4
.IX Item "$prefix/share/quvi/lua/README"
.PD 0
.ie n .IP "$prefix/share/quvi/lua/website/README" 4
.el .IP "\f(CW$prefix\fR/share/quvi/lua/website/README" 4
.IX Item "$prefix/share/quvi/lua/website/README"
.PD
Contain details about working with the quvi Lua scripts (e.g. website
rules). If video link parsing breaks, have a look at these files.
.ie n .IP "$prefix/share/doc/quvi" 4
.el .IP "\f(CW$prefix\fR/share/doc/quvi" 4
.IX Item "$prefix/share/doc/quvi"
Various HOWTOs can be found in this directory.
.SH "FILES"
.IX Header "FILES"
.ie n .IP "\fB\fB$HOME\fB/.quvirc\fR" 4
.el .IP "\fB\f(CB$HOME\fB/.quvirc\fR" 4
.IX Item "$HOME/.quvirc"
You can define most of the command line options in the
config file. For example:
.Sp
.Vb 4
\& agent = some_agent/1.0     # \-\-agent
\& proxy = http://foo:1234    # \-\-proxy
\& no\-verify                  # \-\-no\-verify
\& debug                      # \-\-debug
.Ve
.Sp
Note that you can also define \s-1QUVI_HOME\s0 and use it instead.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
quvi exits with 0 on success and >0 if an error occurred.
.PP
.Vb 10
\&  QUVI_OK               = 0x00
\&  QUVI_MEM              = 0x01, Memory allocation failed
\&  QUVI_BADHANDLE        = 0x02, Bad session handle
\&  QUVI_INVARG           = 0x03, Invalid function argument
\&  QUVI_CURLINIT         = 0x04, libcurl initialization failed
\&  QUVI_LAST             = 0x05, Indicates end of list iteration
\&  QUVI_ABORTEDBYCALLBACK= 0x06, Aborted by callback function
\&  QUVI_LUAINIT          = 0x07, Lua initialization failure
\&  QUVI_NOLUAWEBSITE     = 0x08, Failed to find lua website scripts
\&  \-\-
\&  QUVI_PCRE             = 0x40, libpcre error occurred
\&  QUVI_NOSUPPORT        = 0x41, libquvi does not support the video host
\&  QUVI_CURL             = 0x42, libcurl error occurred
\&  QUVI_ICONV            = 0x43, libiconv error occurred
\&  QUVI_LUA              = 0x44, lua error occurred
.Ve
.SH "OTHER"
.IX Header "OTHER"
.IP "Project page:" 4
.IX Item "Project page:"
<http://quvi.googlecode.com/>
.IP "\s-1FAQ:\s0" 4
.IX Item "FAQ:"
<http://code.google.com/p/quvi/wiki/FAQ>
.IP "Development code:" 4
.IX Item "Development code:"
% git clone git://repo.or.cz/quvi.git
.SH "AUTHOR"
.IX Header "AUTHOR"
Toni Gundogdu.
