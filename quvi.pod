=pod

=head1 NAME

quvi - query video tool

=head1 SYNOPSIS

quvi [options] [url...]

=head1 DESCRIPTION

quvi is a command line tool for parsing video download links.
It supports Youtube and other similar video websites.

The video details are printed to standard output, everything
else is printed to standard error.

=head1 OPTIONS

=over 4

=item B<-h, --help>

Print help and exit.

=item B<-v, --version>

Print program version and exit.

=item B<--hosts>

Print supported hosts and exit.

=item B<--xml>

Print details in XML. The details are escaped.

=item B<-q, --quiet>

Turn off all output.

=item B<--debug>

Turn on libcurl verbose mode.

=item B<-n, --no-verify>

Do not verify video link. Note that quvi will not report
video file length, content-type or file suffix if this
option is used.

=item B<--page-title>=I<string>

Match parsed video page title to I<string>.

=item B<--video-id>=I<string>

Match parsed video ID to I<string>.

=item B<--file-length>=I<length>

Match parsed video file length to I<length>.

=item B<--file-suffix>=I<string>

Match parsed video file suffix to I<string>.

=item B<-a, --test-all>

Run all built-in tests. quvi will test all
built-in video page links.

=item B<-t, --test>=I<pattern>

Match I<pattern> to a built-in test page link
and test it.

=item B<-d, --dump>

Dump video details when running tests. To be used
with B<--test-all>.

=item B<--agent>=I<string>

Identify quvi as I<string> to servers. Default
is "Mozilla/5.0".

=item B<--proxy>=I<host[:port]>

Use the specified HTTP proxy. Note that quvi will
use http_proxy environment setting if it is set.

=item B<--connect-timeout>=I<seconds>

Maximum seconds allowed connection to server take.
Default is 30.

=item B<-f, --format>[=]I<format_id>

Query video format, I<format_id> depends on the host,
see B<--hosts> output.

=back

=head1 EXAMPLES

=over 4

=item quvi URL

Test URL.

=item quvi -a

Run all built-in host tests.

=item quvi -aqd --xml

Same but run in quiet mode. Print video details in XML (to stdout).

=item quvi -t youtube

Match 'youtube' string to built-in video page links
and test it.

=item quvi URL -f best

Query 'best' of the video from the URL.

=back

=head1 BUGS

Sure to be some. Please report them.

  <http://quvi.googlecode.com/>

=head1 DEBUGGING

=over 4

=item quvi --debug URL

Spew out libcurl verbose mode messages.

=item $prefix/share/quvi/lua/README

=item $prefix/share/quvi/lua/website/README

Contain details about working with the quvi Lua scripts (e.g. website
rules). If video link parsing breaks, have a look at these files.

=item $prefix/share/doc/quvi

Various HOWTOs can be found in this directory.

=back

=head1 FILES

=over 4

=item B<$HOME/.quvirc>

You can define most of the command line options in the
config file. For example:

 agent = some_agent/1.0     # --agent
 proxy = http://foo:1234    # --proxy
 no-verify                  # --no-verify
 debug                      # --debug

Note that you can also define QUVI_HOME and use it instead.

=back

=head1 ENVIRONMENT

=over 4

=item B<QUVI_HOME>

Defines path to a directory containing the configuration file.
Similar to $HOME found on Unix-like systems, but can be used
to override the $HOME setting (if any).

=item B<QUVI_BASEDIR>

Defines an exlusive path to the directory from which quvi searches
for the essential quvi files, e.g. the lua scripts. Exclusive here
means that by setting B<QUVI_BASEDIR> the user can override all of
the default search paths.

Not to be confused with B<QUVI_HOME> which is strictly a C<quvi(1)>
variable whereas B<QUVI_BASEDIR> is a libquvi variable.

=item B<QUVI_SHOW_SCANDIR>

You can have libquvi dump (to stderr) the scanned directory
paths by setting this environment variable.

=back

=head1 EXIT STATUS

quvi exits with 0 on success and E<gt>0 if an error occurred.

  QUVI_OK               = 0x00
  QUVI_MEM              = 0x01, Memory allocation failed
  QUVI_BADHANDLE        = 0x02, Bad session handle
  QUVI_INVARG           = 0x03, Invalid function argument
  QUVI_CURLINIT         = 0x04, libcurl initialization failed
  QUVI_LAST             = 0x05, Indicates end of list iteration
  QUVI_ABORTEDBYCALLBACK= 0x06, Aborted by callback function
  QUVI_LUAINIT          = 0x07, Lua initialization failure
  QUVI_NOLUAWEBSITE     = 0x08, Failed to find lua website scripts
  --
  QUVI_PCRE             = 0x40, libpcre error occurred
  QUVI_NOSUPPORT        = 0x41, libquvi does not support the video host
  QUVI_CURL             = 0x42, libcurl error occurred
  QUVI_ICONV            = 0x43, libiconv error occurred
  QUVI_LUA              = 0x44, lua error occurred

=head1 OTHER

=over 4

=item Project page:

<http://quvi.googlecode.com/>

=item FAQ:

<http://code.google.com/p/quvi/wiki/FAQ>

=item Development code:

% git clone git://repo.or.cz/quvi.git

=back

=head1 AUTHOR

Toni Gundogdu.

=cut
